import type { FlatConfigItem } from "eslint";
import js from "@eslint/js";
import typescriptPlugin from "@typescript-eslint/eslint-plugin";
import parser from "@typescript-eslint/parser";

const config: FlatConfigItem[] = [
  {
    languageOptions: {
      parser,
      parserOptions: {
        ecmaVersion: "latest",
        sourceType: "module",
        project: "./tsconfig.json",
      },
      globals: {
        process: "readonly",
        window: "writable",
        navigator: "writable",
        location: "writable",
        document: "readonly",
        console: "readonly",
        crypto: "readonly",
        alert: "readonly",
        performance: "readonly",
        URL: "readonly",
        WebAssembly: "readonly",

        setTimeout: "readonly",
        setInterval: "readonly",
        clearTimeout: "readonly",
        clearInterval: "readonly",
        requestAnimationFrame: "readonly",
        cancelAnimationFrame: "readonly",

        Buffer: "readonly",
        FileReader: "readonly",
        TextEncoder: "readonly",
        TextDecoder: "readonly",
        fetch: "readonly",
        Headers: "readonly",
        Response: "readonly",
        WebSocket: "readonly",
        Blob: "readonly",
        File: "readonly",
        XMLHttpRequest: "readonly",
        URLSearchParams: "readonly",
        ImageData: "readonly",
        Image: "readonly",
        OffscreenCanvas: "readonly",
        BroadcastChannel: "readonly",

        AudioContext: "readonly",
        AudioWorkletProcessor: "readonly",
        webkitAudioContext: "readonly",
        AudioWorkletNode: "readonly",
        Worker: "readonly",
        postMessage: "readonly",
        importScripts: "readonly",

        DEBUG: "writable",
      },
    },
    plugins: {
      "@typescript-eslint": typescriptPlugin,
    },
    rules: {
      "eol-last": "error",
      "no-trailing-spaces": "error",
      "no-extra-semi": "error",
      "no-tabs": "error",
      "quotes": ["error", "double", { avoidEscape: true, allowTemplateLiterals: true }],
      "keyword-spacing": ["error", {
        overrides: {
          if: { after: false },
          for: { after: false },
          while: { after: false },
          switch: { after: false },
          catch: { after: false },
        },
      }],
      "semi": "error",
      "no-useless-return": "error",
      "eqeqeq": "error",
      "no-multiple-empty-lines": ["error", { max: 2, maxBOF: 0, maxEOF: 0 }],
      "radix": "error",
      "comma-style": ["error", "last"],
      "no-sequences": "error",
      "constructor-super": "error",
      "for-direction": "error",
      "getter-return": "error",
      "no-async-promise-executor": "error",
      "no-class-assign": "error",
      "no-compare-neg-zero": "error",
      "no-cond-assign": "error",
      "no-const-assign": "error",
      "no-constant-binary-expression": "error",
      "no-delete-var": "error",
      "no-dupe-args": "error",
      "no-dupe-class-members": "error",
      "no-dupe-keys": "error",
      "no-duplicate-case": "error",
      "no-empty-character-class": "error",
      "no-empty-pattern": "error",
      "no-empty-static-block": "error",
      "no-ex-assign": "error",
      "no-extra-boolean-cast": "error",
      "no-fallthrough": "error",
      "no-func-assign": "error",
      "no-global-assign": "error",
      "no-import-assign": "error",
      "no-invalid-regexp": "error",
      "no-irregular-whitespace": "error",
      "no-loss-of-precision": "error",
      "no-misleading-character-class": "error",
      "no-new-native-nonconstructor": "error",
      "no-nonoctal-decimal-escape": "error",
      "no-obj-calls": "error",
      "no-octal": "error",
      "no-prototype-builtins": "error",
      "no-regex-spaces": "error",
      "no-self-assign": "error",
      "no-setter-return": "error",
      "no-shadow-restricted-names": "error",
      "no-sparse-arrays": "error",
      "no-this-before-super": "error",
      "no-undef": "error",
      "no-unexpected-multiline": "error",
      "no-unsafe-finally": "error",
      "no-unsafe-negation": "error",
      "no-unsafe-optional-chaining": "error",
      "no-unused-labels": "error",
      "no-unused-private-class-members": "error",
      "no-useless-backreference": "error",
      "no-useless-catch": "error",
      "no-with": "error",
      "require-yield": "error",
      "use-isnan": "error",
      "valid-typeof": "error",
      "strict": "error"
    },
  },
];

export default config;
